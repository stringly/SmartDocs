@model SmartDocs.Models.ViewModels.PPAFormViewModel

@{
    Layout = "_Layout";
}
@section head{
    <link href="~/lib/smart_wizard/css/smart_wizard.css" rel="stylesheet" type="text/css" />
    <link href="~/lib/smart_wizard/css/smart_wizard_theme_arrows.min.css" rel="stylesheet" type="text/css" />
    <link href="~/lib/SmartDocs/css/spinner.css" rel="stylesheet" type="text/css" />
    <link href="~/lib/bootstrap-datetimepicker/css/bootstrap-datetimepicker.min.css" rel="stylesheet" type="text/css" />
}

<div id="waitSection">
    <div class="container-fluid" style="width:100%;">
        <div class="row">
            <div class="col-sm-2 col-sm-offset-5" style="text-align:center">
                <div class="loader" id="loader-4">
                    <span></span>
                    <span></span>
                    <span></span>
                </div>
                <h3 style="margin-top:0px;">Loading Form</h3>
            </div>
        </div>
    </div>
</div>
<div id="formSection" style="display:none;" class="col-md-12 col-lg-10 col-lg-offset-1">
    <div class="container-fluid" style="width: 100%">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="DocumentId" />
            <div id="smartwizard" class="container-fluid" align="center">
                <ul>
                    <li><a href="#EmployeeInfo">Employee<br /><small>Information about the employee.</small></a></li>
                    <li><a href="#PositionInfo">Position/Rating<br /><small>Pick a Job and Rating.</small></a></li>
                    <li><a href="#Comments">Comments/Recommendations<br /><small>Provide your Comments</small></a></li>
                    <li><a href="#Done">Save<br /><small>Save changes</small></a></li>
                </ul>
                <div>
                    <div id="EmployeeInfo" class="">
                        <div class="row">
                            <div class="form-group col-md-3">
                                <label asp-for="FirstName" class="control-label"></label>
                                <input asp-for="FirstName" class="form-control" />
                                <span asp-validation-for="FirstName" class="text-danger"></span>
                            </div>
                            <div class="form-group col-md-3">
                                <label asp-for="LastName" class="control-label"></label>
                                <input asp-for="LastName" class="form-control" />
                                <span asp-validation-for="LastName" class="text-danger"></span>
                            </div>
                            <div class="form-group col-md-2">
                                <label asp-for="DepartmentIdNumber" class="control-label"></label>
                                <input asp-for="DepartmentIdNumber" class="form-control" />
                                <span asp-validation-for="DepartmentIdNumber" class="text-danger"></span>
                            </div>
                            <div class="form-group col-md-2">
                                <label asp-for="PayrollIdNumber" class="control-label"></label>
                                <input asp-for="PayrollIdNumber" class="form-control" />
                                <span asp-validation-for="PayrollIdNumber" class="text-danger"></span>
                            </div>
                            <div class="form-group col-md-2">
                                <label asp-for="PositionNumber" class="control-label"></label>
                                <input asp-for="PositionNumber" class="form-control" />
                                <span asp-validation-for="PositionNumber" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-md-3">
                                <label asp-for="DepartmentDivision" class="control-label"></label>
                                <select name="@Html.NameFor(model => model.DepartmentDivision)"
                                        id="@Html.IdFor(model => model.DepartmentDivision)"
                                        class="form-control">
                                    @foreach (var division in Model.Components)
                                    {
                                        <option value="@division.Name" data-code="@division.DepartmentCode" data-address="@division.Address">@division.Name</option>
                                    }
                                </select>
                            </div>
                            <div class="form-group col-md-3">
                                <label asp-for="DepartmentDivisionCode" class="control-label"></label>
                                <input asp-for="DepartmentDivisionCode" class="form-control" />
                                <span asp-validation-for="DepartmentDivisionCode" class="text-danger"></span>
                            </div>
                            <div class="form-group col-xs-6">
                                <label asp-for="WorkPlaceAddress" class="control-label"></label>
                                <input asp-for="WorkPlaceAddress" class="form-control" />
                                <span asp-validation-for="WorkPlaceAddress" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-md-4">
                                <label asp-for="AuthorUserId" class="control-label"></label>
                                @Html.DropDownListFor(model => model.AuthorUserId,
                                        new SelectList(Model.Users, "UserId", "DisplayName"),
                                        new { @class = "form-control", id = "AuthorId" })
                                <span asp-validation-for="AuthorUserId" class="text-danger"></span>
                            </div>
                            <div class="form-group col-md-4">
                                <label asp-for="SupervisedByEmployee" class="control-label"></label>
                                <input asp-for="SupervisedByEmployee" class="form-control" />
                                <span asp-validation-for="SupervisedByEmployee" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                    <div id="PositionInfo" class="">
                        <div class="row">
                            <div class="form-group col-md-3">
                                <label asp-for="StartDate" class="control-label"></label>
                                <div class='input-group date' id='datetimepicker1'>
                                    <input type="text" asp-for="StartDate" class="form-control" style="padding-top:0px" />
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                                <span asp-validation-for="StartDate" class="text-danger"></span>
                            </div>
                            <div class="form-group col-md-3">
                                <label asp-for="EndDate" class="control-label"></label>
                                <div class='input-group date' id='datetimepicker2'>
                                    <input type="text" asp-for="EndDate" class="form-control" style="padding-top:0px" />
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                                <span asp-validation-for="EndDate" class="text-danger"></span>
                            </div>
                            <div class="form-group col-md-4">
                                <label asp-for="JobId" class="control-label"></label>
                                @Html.DropDownListFor(model => model.JobId,
                                        new SelectList(Model.JobList, "JobId", "DisplayName"),
                                        "Choose Job Description:",
                                        new { @class = "form-control", id = "JobDescription" })
                                <span asp-validation-for="JobId" class="text-danger"></span>
                            </div>
                        </div>
                        <div id="RatingInfo" style="display:block">
                            @await Component.InvokeAsync("JobDescriptionCategoryList", Model.job)
                        </div>
                    </div>
                    <div id="Comments" class="">
                        <div class="form-group">
                            <label asp-for="Assessment" class="control-label"></label>
                            <textarea asp-for="Assessment" class="form-control" id="comments"></textarea>
                            <span asp-validation-for="Assessment" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Recommendation" class="control-label"></label>
                            <textarea asp-for="Recommendation" class="form-control" id="recommendations"></textarea>
                            <span asp-validation-for="Recommendation" class="text-danger"></span>
                        </div>
                    </div>
                    <div id="Done" class="">
                        <div class="form-group">
                            <h3>Click "Save" to Generate a PPA from the information that you have provided.</h3>
                            <p>You will be prompted to correct any items that you have missed. Once the PPA is generated, a copy will be available under "My PPAs" if you to re-download or edit it later.</p>
                            <input type="submit" value="Save" class="btn btn-success" />
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>
@section scripts{
    <script src="https://cdn.ckeditor.com/4.10.1/basic/ckeditor.js"></script>
    <script type="text/javascript" src="~/lib/smart_wizard/js/jquery.smartWizard.min.js"></script>
    <script type="text/javascript" src="~/lib/moment/moment.min.js"></script>
    <script type="text/javascript" src="~/lib/bootstrap-datetimepicker/js/bootstrap-datetimepicker.min.js"></script>
    <script>
        (function ($) {
            var defaultOptions = {
                validClass: 'has-success',
                errorClass: 'has-error',
                highlight: function (element, errorClass, validClass) {
                    $(element).closest(".form-group")
                        .removeClass(validClass)
                        .addClass('has-error');
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).closest(".form-group")
                        .removeClass('has-error')
                        .addClass(validClass);
                }
            };

            $.validator.setDefaults(defaultOptions);

            $.validator.unobtrusive.options = {
                errorClass: defaultOptions.errorClass,
                validClass: defaultOptions.validClass,
            };
        })(jQuery);
        $(document).ready(function () {
            $('#smartwizard').smartWizard({
                theme: 'arrows',
                anchorSettings: {
                    markDoneStep: true
                },
                toolbarSettings: {
                    toolbarPosition: 'top'
                }
            });
            $("#smartwizard").on("leaveStep", function (e, anchorObject, stepNumber, stepDirection) {
                if (stepDirection == "forward") {
                    var result = false;
                    var message = "";
                    switch (stepNumber) {
                        case 0:
                            result = ($("#EmployeeInfo :input").valid());
                            break;
                        case 1:
                            result = ($("#PositionInfo :input").valid() && validateRating())
                            break;
                        case 2:
                            result = ($("#Comments :input").valid());
                            break;
                    }
                    if (!result) {
                        message = "Please correct the indicated fields before proceeding.";
                    }
                    $("#pageMessage").text(message);
                    return result;
                }
                else {
                    $("#pageMessage").text("");
                }
            });
            commentEditor = CKEDITOR.replace('comments', {
                fontSize_defaultLabel: '10px',
                disableNativeSpellChecker: false,
                contentsCss: '/lib/ckeditor/appraisalEditorStyle.css'
            });
            commentEditor.addCommand("addCategoryTitles", {
                exec: function (edt) {
                    addHeaders();
                }
            });
            commentEditor.ui.addButton('SuperButton', {
                label: "Add Job Description Category Headers",
                command: 'addCategoryTitles',
                toolbar: 'insert',
                icon: '/lib/Images/Refresh.png'
            });
            CKEDITOR.replace('recommendations', {
                fontSize_defaultLabel: '10px',
                disableNativeSpellChecker: false,
                contentsCss: '/lib/ckeditor/appraisalEditorStyle.css'
            });
            reCalcOverall();
            $("#JobDescription").change(function () {
                var Id = $(this).val();
                var container = $("#RatingInfo");
                if (Id != 0) {
                    $.get("/SmartPPA/GetJobDescriptionViewComponent", { jobId: Id }, function (data) { container.html(data); });
                } else {
                    container.empty();
                }
            });
            $("#DepartmentDivision").change(function () {
                $("#DepartmentDivisionCode").val($(this).find(":selected").data("code"));
                $("#DepartmentDivisionCode").closest(".form-group").removeClass("has-error").addClass("has-success");
                $("#WorkPlaceAddress").val($(this).find(":selected").data("address"));
                $("#WorkPlaceAddress").closest(".form-group").removeClass("has-error").addClass("has-success");
            })
            $('#datetimepicker1').datetimepicker({
                format: "l"
            });
            $('#datetimepicker2').datetimepicker({
                format: "l"
            });
            $("#waitSection").hide();
            $("#formSection").show();
        });
        function addHeaders() {
            var editor = CKEDITOR.instances['comments'];
            if (editor.getData().length > 0) {
                response = confirm("Adding the Job Description Category headers to the comments field will clear any comments you have already added. Are you sure you want to proceed?")
                if (response == false) {
                    return;
                }
                else {
                    editor.setData('', addHeaders);
                }
            }
            var letters = $(".category-letter").toArray();
            var titles = $(".category-title").toArray();
            var resultString = "";
            for (var i = 0; i < letters.length; i++) {
                resultString = resultString + "<p>" + letters[i].innerHTML + " - " + titles[i].innerHTML + ":</p>"
            }
            editor.insertHtml(resultString);
        }
        function validateRating() {
            var categoryCount = 0;
            var sumOfScores = 0;
            var list = $(".total-col").toArray();
            for (var i = 0; i < list.length; i++) {
                categoryCount++;
                sumOfScores = sumOfScores + parseFloat(list[i].innerHTML);
            }
            console.log(sumOfScores)
            if (!sumOfScores > 0) {
                $("#ratingValidator").show();
                return false;
            }
            else {
                $("#ratingValidator").hide();
                return true;
            }
        }
        function ratingChange(weight, row, score) {
            $('#Row-Total-' + row).text(+((weight * 0.01) * score).toFixed(2));
            reCalcOverall();
        }
        function reCalcOverall() {
            console.log("recalc called");
            var categoryCount = 0;
            var sumOfScores = 0;
            var list = $(".total-col").toArray();
            for (var i = 0; i < list.length; i++) {
                categoryCount++;
                sumOfScores = sumOfScores + parseFloat(list[i].innerHTML);
            }
            $("#Total-Rating").text(+sumOfScores.toFixed(2));
            if (sumOfScores <= 0.5) {
                $("#Overall-Appraisal").text("Unsatisfactory");
            }
            else if (sumOfScores >= 0.51 && sumOfScores <= 1.5) {
                $("#Overall-Appraisal").text("Improvement Needed");
            }
            else if (sumOfScores >= 1.51 && sumOfScores <= 2.5) {
                $("#Overall-Appraisal").text("Satisfactory");
            }
            else if (sumOfScores >= 2.51 && sumOfScores <= 3.5) {
                $("#Overall-Appraisal").text("Exceeds Satisfactory");
            }
            else {
                $("#Overall-Appraisal").text("Outstanding");
            }
        }

    </script>

}
